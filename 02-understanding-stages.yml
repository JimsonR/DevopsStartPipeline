# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  # vmImage: ubuntu-latest
  name: Test Agent

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - script: echo Build FirstJob
    - script: echo $(PipelineLevelVariable)
    - script: echo $(Build.BuildNumber)
    - script: echo $(Build.SourceBranchName)
    - script: echo $(Build.BuildId)
    - script: echo $(Build.SourcesDirectory)
    - script: dir /s "$(System.DefaultWorkingDirectory)"
    - script: echo $(Build.ArtifactStagingDirectory)
    - script: dir /s "$(Build.ArtifactStagingDirectory)"

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - script: dir /s "$(Build.ArtifactStagingDirectory)"

  # - job: SecondJob
  #   variables:
  #     environment: JobLevelVariable
  #   steps:
  #   - script: echo Build SecondJob
  #   - script: echo $(environment)
# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     steps:
#     - script: echo $(environment)DeployJob
# - stage: QADeploy
#   variables:
#     environment: QA
#   dependsOn: Build
#   jobs:
#     - job: QADeployJob
#       steps:
#       - script: echo $(environment)DeployJob
# - stage: ProdDeploy
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   variables:
#     environment: Prod
#   jobs:
#     - job: ProdDeployJob
#       steps:
#       - script: echo $(environment)DeployJob

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

