trigger:
- main

pool:
  # vmImage: ubuntu-latest
  name: test Agent

variables:
  azureSubscription: 'azure-resource-manager-service-connection'  # Name of your Azure subscription
  resourceGroup: 'terraform-backend-rg'
  storageAccount: 'storageaccjimsonxyz'
  containerName: 'storageaccjimsoncontainer'
  location: 'westeurope'

steps:
- task: AzureCLI@2
  displayName: 'Login to Azure CLI'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Check if resource group exists
      if [ "$(az group exists --name $(resourceGroup))" = "false" ]; then
        az group create --name $(resourceGroup) --location $(location)
      fi
      
      # Check if storage account exists
      if ! az storage account show --name $(storageAccount) --resource-group $(resourceGroup) > /dev/null 2>&1; then
        az storage account create \
          --name $(storageAccount) \
          --resource-group $(resourceGroup) \
          --sku Standard_RAGRS \
          --kind StorageV2 \
          --encryption-services blob \
          --access-tier hot \
          --https-only true \
          --min-tls-version TLS1_2 \
          --location $(location)
      fi
      
      # Create storage container
      az storage container create \
        --name $(containerName) \
        --account-name $(storageAccount)
      
- task: TerraformCLI@2
  displayName: 'Terraform Init'
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: $(azureSubscription)
    ensureBackend: false
    backendAzureRmSubscriptionId: $(azureSubscription)
    backendAzureRmResourceGroupName: $(resourceGroup)
    backendAzureRmStorageAccountName: $(storageAccount)
    backendAzureRmContainerName: $(containerName)
    backendAzureRmKey: 'kubernetes-dev.tfstate'

- task: TerraformCLI@2
  displayName: 'Terraform Apply'
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
