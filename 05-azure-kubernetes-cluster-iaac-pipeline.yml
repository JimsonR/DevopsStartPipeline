trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TF_WORKING_DIR: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
  CLEAN_KEY_PATH: '$(System.DefaultWorkingDirectory)/cleaned_ssh_key.pub'

stages:
- stage: Setup
  jobs:
  - job: AzureSetup
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'azure-resource-manager-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logging into Azure..."
          az account show --output table
          
          # Resource group and storage account creation logic
          # ... (keep your existing Azure setup code) ...
      displayName: 'Create Azure Resources'

    - task: DownloadSecureFile@1
      name: publickey
      inputs:
        secureFile: 'azure_rsa.pub'
        retryCount: '5'
    
    - bash: |
        # Validate the key first
        if ! ssh-keygen -l -f $(publickey.secureFilePath); then
          echo "##vso[task.logissue type=error]Invalid SSH key format"
          exit 1
        fi
        
        # Create a cleaned version (ensure Unix line endings)
        sed 's/\r$//' $(publickey.secureFilePath) > $(CLEAN_KEY_PATH)
        chmod 644 $(CLEAN_KEY_PATH)
        
        # Set output variable with the full file path
        echo "##vso[task.setvariable variable=SSH_KEY_FILE_PATH;isOutput=true]$(CLEAN_KEY_PATH)"
      displayName: 'Prepare SSH Key'
      name: prepareKey

- stage: Terraform
  dependsOn: Setup
  jobs:
  - job: TerraformJob
    variables:
      SSH_KEY_PATH: $[ dependencies.Setup.outputs['AzureSetup.prepareKey.SSH_KEY_FILE_PATH'] ]
    steps:
    - bash: |
        echo "Using SSH key at: $(SSH_KEY_PATH)"
        ls -la $(SSH_KEY_PATH)
        echo "Key content:"
        cat $(SSH_KEY_PATH)
        ssh-keygen -l -f $(SSH_KEY_PATH)
      displayName: 'Verify SSH Key'
    
    - task: TerraformCLI@2
      inputs:
        command: 'init'
        workingDirectory: '$(TF_WORKING_DIR)'
        backendType: 'azurerm'
        backendServiceArm: 'azure-resource-manager-service-connection'
        backendAzureRmResourceGroupName: 'terraform-backend-rg'
        backendAzureRmStorageAccountName: 'storageaccjimsonxyz'
        backendAzureRmContainerName: 'storageaccjimsoncontainer'
        backendAzureRmKey: 'kubernetes-dev.tfstate'

    - task: TerraformCLI@2
      inputs:
        command: 'apply'
        workingDirectory: '$(TF_WORKING_DIR)'
        commandOptions: '-auto-approve -var="client_id=$(client_id)" -var="client_secret=$(client_secret)" -var="ssh_public_key_path=$(SSH_KEY_PATH)" -var="node_count=2"'       
    - bash: |
        rm -f $(CLEAN_KEY_PATH)
      displayName: 'Clean up SSH key'
      condition: always()
