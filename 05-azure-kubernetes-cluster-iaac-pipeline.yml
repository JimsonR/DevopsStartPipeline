trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TF_WORKING_DIR: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
  CLEAN_KEY_PATH: '$(System.DefaultWorkingDirectory)/cleaned_ssh_key.pub'

stages:
- stage: Setup
  jobs:
  - job: AzureSetup
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'azure-resource-manager-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logging into Azure..."
          az account show --output table
          
          # Resource group and storage account creation logic
          # ... (keep your existing Azure setup code) ...
      displayName: 'Create Azure Resources'

    - task: DownloadSecureFile@1
      name: publickey
      inputs:
        secureFile: 'azure_rsa.pub'
        retryCount: '5'
    
    - bash: |
        # Read and clean the public key
        PUBLIC_KEY_CONTENT=$(cat $(publickey.secureFilePath) | tr -d '\n' | awk '{$1=$1};1')
        
        # Write cleaned key to file
        echo "$PUBLIC_KEY_CONTENT" > $(CLEAN_KEY_PATH)
        
        # Verify key format
        echo "SSH Public Key Content:"
        cat $(CLEAN_KEY_PATH)
        ssh-keygen -l -f $(CLEAN_KEY_PATH)
        
        # Set both pipeline and output variable
        echo "##vso[task.setvariable variable=SSH_PUBLIC_KEY_PATH]$(CLEAN_KEY_PATH)"
        echo "##vso[task.setvariable variable=SSH_PUBLIC_KEY_PATH;isOutput=true]$(CLEAN_KEY_PATH)"
      displayName: 'Process SSH public key'
    - bash: |
          echo "=== RAW KEY CONTENT ==="
          cat $(publickey.secureFilePath)
          echo -e "\n=== HEX DUMP ==="
          hexdump -C $(publickey.secureFilePath) | head -n 5
          echo -e "\n=== KEY VALIDATION ==="
          ssh-keygen -l -f $(publickey.secureFilePath)
      displayName: 'Inspect SSH Key'
      name: processKey


- stage: Terraform
  dependsOn: Setup
  jobs:
  - job: TerraformJob
    variables:
      SSH_KEY_PATH: $[ dependencies.Setup.outputs['AzureSetup.processKey.SSH_PUBLIC_KEY_PATH'] ]
    steps:
    - bash: |
        echo "Using SSH key at path: $(SSH_KEY_PATH)"
        ls -la $(SSH_KEY_PATH)
        cat $(SSH_KEY_PATH)
      displayName: 'Verify SSH Key Path'
    
    - task: TerraformCLI@2
      inputs:
        command: 'init'
        workingDirectory: '$(TF_WORKING_DIR)'
        backendType: 'azurerm'
        backendServiceArm: 'azure-resource-manager-service-connection'
        backendAzureRmResourceGroupName: 'terraform-backend-rg'
        backendAzureRmStorageAccountName: 'storageaccjimsonxyz'
        backendAzureRmContainerName: 'storageaccjimsoncontainer'
        backendAzureRmKey: 'kubernetes-dev.tfstate'

    - task: TerraformCLI@2
      inputs:
        command: 'apply'
        workingDirectory: '$(TF_WORKING_DIR)'
        environmentServiceName: 'azure-resource-manager-service-connection'
        commandOptions: '-auto-approve -var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key="$(SSH_KEY_PATH)" -var node_count=2'
        
    - bash: |
        rm -f $(CLEAN_KEY_PATH)
      displayName: 'Clean up SSH key'
      condition: always()
